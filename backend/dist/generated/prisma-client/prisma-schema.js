"use strict";
// Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = "type Account {\n  id: ID!\n  owner: User!\n  name: String!\n  number: String!\n  balance: Float\n  bank: Bank!\n  bankAccountId: String!\n  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction!]\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype AccountConnection {\n  pageInfo: PageInfo!\n  edges: [AccountEdge]!\n  aggregate: AggregateAccount!\n}\n\ninput AccountCreateInput {\n  id: ID\n  owner: UserCreateOneWithoutAccountsInput!\n  name: String!\n  number: String!\n  balance: Float\n  bank: BankCreateOneWithoutAccountsInput!\n  bankAccountId: String!\n  transactions: TransactionCreateManyWithoutAccountInput\n}\n\ninput AccountCreateManyWithoutBankInput {\n  create: [AccountCreateWithoutBankInput!]\n  connect: [AccountWhereUniqueInput!]\n}\n\ninput AccountCreateManyWithoutOwnerInput {\n  create: [AccountCreateWithoutOwnerInput!]\n  connect: [AccountWhereUniqueInput!]\n}\n\ninput AccountCreateOneWithoutTransactionsInput {\n  create: AccountCreateWithoutTransactionsInput\n  connect: AccountWhereUniqueInput\n}\n\ninput AccountCreateWithoutBankInput {\n  id: ID\n  owner: UserCreateOneWithoutAccountsInput!\n  name: String!\n  number: String!\n  balance: Float\n  bankAccountId: String!\n  transactions: TransactionCreateManyWithoutAccountInput\n}\n\ninput AccountCreateWithoutOwnerInput {\n  id: ID\n  name: String!\n  number: String!\n  balance: Float\n  bank: BankCreateOneWithoutAccountsInput!\n  bankAccountId: String!\n  transactions: TransactionCreateManyWithoutAccountInput\n}\n\ninput AccountCreateWithoutTransactionsInput {\n  id: ID\n  owner: UserCreateOneWithoutAccountsInput!\n  name: String!\n  number: String!\n  balance: Float\n  bank: BankCreateOneWithoutAccountsInput!\n  bankAccountId: String!\n}\n\ntype AccountEdge {\n  node: Account!\n  cursor: String!\n}\n\nenum AccountOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  number_ASC\n  number_DESC\n  balance_ASC\n  balance_DESC\n  bankAccountId_ASC\n  bankAccountId_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AccountPreviousValues {\n  id: ID!\n  name: String!\n  number: String!\n  balance: Float\n  bankAccountId: String!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ninput AccountScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  balance: Float\n  balance_not: Float\n  balance_in: [Float!]\n  balance_not_in: [Float!]\n  balance_lt: Float\n  balance_lte: Float\n  balance_gt: Float\n  balance_gte: Float\n  bankAccountId: String\n  bankAccountId_not: String\n  bankAccountId_in: [String!]\n  bankAccountId_not_in: [String!]\n  bankAccountId_lt: String\n  bankAccountId_lte: String\n  bankAccountId_gt: String\n  bankAccountId_gte: String\n  bankAccountId_contains: String\n  bankAccountId_not_contains: String\n  bankAccountId_starts_with: String\n  bankAccountId_not_starts_with: String\n  bankAccountId_ends_with: String\n  bankAccountId_not_ends_with: String\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [AccountScalarWhereInput!]\n  OR: [AccountScalarWhereInput!]\n  NOT: [AccountScalarWhereInput!]\n}\n\ntype AccountSubscriptionPayload {\n  mutation: MutationType!\n  node: Account\n  updatedFields: [String!]\n  previousValues: AccountPreviousValues\n}\n\ninput AccountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AccountWhereInput\n  AND: [AccountSubscriptionWhereInput!]\n  OR: [AccountSubscriptionWhereInput!]\n  NOT: [AccountSubscriptionWhereInput!]\n}\n\ninput AccountUpdateInput {\n  owner: UserUpdateOneRequiredWithoutAccountsInput\n  name: String\n  number: String\n  balance: Float\n  bank: BankUpdateOneRequiredWithoutAccountsInput\n  bankAccountId: String\n  transactions: TransactionUpdateManyWithoutAccountInput\n}\n\ninput AccountUpdateManyDataInput {\n  name: String\n  number: String\n  balance: Float\n  bankAccountId: String\n}\n\ninput AccountUpdateManyMutationInput {\n  name: String\n  number: String\n  balance: Float\n  bankAccountId: String\n}\n\ninput AccountUpdateManyWithoutBankInput {\n  create: [AccountCreateWithoutBankInput!]\n  delete: [AccountWhereUniqueInput!]\n  connect: [AccountWhereUniqueInput!]\n  set: [AccountWhereUniqueInput!]\n  disconnect: [AccountWhereUniqueInput!]\n  update: [AccountUpdateWithWhereUniqueWithoutBankInput!]\n  upsert: [AccountUpsertWithWhereUniqueWithoutBankInput!]\n  deleteMany: [AccountScalarWhereInput!]\n  updateMany: [AccountUpdateManyWithWhereNestedInput!]\n}\n\ninput AccountUpdateManyWithoutOwnerInput {\n  create: [AccountCreateWithoutOwnerInput!]\n  delete: [AccountWhereUniqueInput!]\n  connect: [AccountWhereUniqueInput!]\n  set: [AccountWhereUniqueInput!]\n  disconnect: [AccountWhereUniqueInput!]\n  update: [AccountUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [AccountUpsertWithWhereUniqueWithoutOwnerInput!]\n  deleteMany: [AccountScalarWhereInput!]\n  updateMany: [AccountUpdateManyWithWhereNestedInput!]\n}\n\ninput AccountUpdateManyWithWhereNestedInput {\n  where: AccountScalarWhereInput!\n  data: AccountUpdateManyDataInput!\n}\n\ninput AccountUpdateOneRequiredWithoutTransactionsInput {\n  create: AccountCreateWithoutTransactionsInput\n  update: AccountUpdateWithoutTransactionsDataInput\n  upsert: AccountUpsertWithoutTransactionsInput\n  connect: AccountWhereUniqueInput\n}\n\ninput AccountUpdateWithoutBankDataInput {\n  owner: UserUpdateOneRequiredWithoutAccountsInput\n  name: String\n  number: String\n  balance: Float\n  bankAccountId: String\n  transactions: TransactionUpdateManyWithoutAccountInput\n}\n\ninput AccountUpdateWithoutOwnerDataInput {\n  name: String\n  number: String\n  balance: Float\n  bank: BankUpdateOneRequiredWithoutAccountsInput\n  bankAccountId: String\n  transactions: TransactionUpdateManyWithoutAccountInput\n}\n\ninput AccountUpdateWithoutTransactionsDataInput {\n  owner: UserUpdateOneRequiredWithoutAccountsInput\n  name: String\n  number: String\n  balance: Float\n  bank: BankUpdateOneRequiredWithoutAccountsInput\n  bankAccountId: String\n}\n\ninput AccountUpdateWithWhereUniqueWithoutBankInput {\n  where: AccountWhereUniqueInput!\n  data: AccountUpdateWithoutBankDataInput!\n}\n\ninput AccountUpdateWithWhereUniqueWithoutOwnerInput {\n  where: AccountWhereUniqueInput!\n  data: AccountUpdateWithoutOwnerDataInput!\n}\n\ninput AccountUpsertWithoutTransactionsInput {\n  update: AccountUpdateWithoutTransactionsDataInput!\n  create: AccountCreateWithoutTransactionsInput!\n}\n\ninput AccountUpsertWithWhereUniqueWithoutBankInput {\n  where: AccountWhereUniqueInput!\n  update: AccountUpdateWithoutBankDataInput!\n  create: AccountCreateWithoutBankInput!\n}\n\ninput AccountUpsertWithWhereUniqueWithoutOwnerInput {\n  where: AccountWhereUniqueInput!\n  update: AccountUpdateWithoutOwnerDataInput!\n  create: AccountCreateWithoutOwnerInput!\n}\n\ninput AccountWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  owner: UserWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  balance: Float\n  balance_not: Float\n  balance_in: [Float!]\n  balance_not_in: [Float!]\n  balance_lt: Float\n  balance_lte: Float\n  balance_gt: Float\n  balance_gte: Float\n  bank: BankWhereInput\n  bankAccountId: String\n  bankAccountId_not: String\n  bankAccountId_in: [String!]\n  bankAccountId_not_in: [String!]\n  bankAccountId_lt: String\n  bankAccountId_lte: String\n  bankAccountId_gt: String\n  bankAccountId_gte: String\n  bankAccountId_contains: String\n  bankAccountId_not_contains: String\n  bankAccountId_starts_with: String\n  bankAccountId_not_starts_with: String\n  bankAccountId_ends_with: String\n  bankAccountId_not_ends_with: String\n  transactions_every: TransactionWhereInput\n  transactions_some: TransactionWhereInput\n  transactions_none: TransactionWhereInput\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [AccountWhereInput!]\n  OR: [AccountWhereInput!]\n  NOT: [AccountWhereInput!]\n}\n\ninput AccountWhereUniqueInput {\n  id: ID\n}\n\ntype AggregateAccount {\n  count: Int!\n}\n\ntype AggregateBank {\n  count: Int!\n}\n\ntype AggregateBudget {\n  count: Int!\n}\n\ntype AggregateCategory {\n  count: Int!\n}\n\ntype AggregateIcon {\n  count: Int!\n}\n\ntype AggregateTransaction {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype Bank {\n  id: ID!\n  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account!]\n  name: String!\n}\n\ntype BankConnection {\n  pageInfo: PageInfo!\n  edges: [BankEdge]!\n  aggregate: AggregateBank!\n}\n\ninput BankCreateInput {\n  id: ID\n  accounts: AccountCreateManyWithoutBankInput\n  name: String!\n}\n\ninput BankCreateOneWithoutAccountsInput {\n  create: BankCreateWithoutAccountsInput\n  connect: BankWhereUniqueInput\n}\n\ninput BankCreateWithoutAccountsInput {\n  id: ID\n  name: String!\n}\n\ntype BankEdge {\n  node: Bank!\n  cursor: String!\n}\n\nenum BankOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype BankPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype BankSubscriptionPayload {\n  mutation: MutationType!\n  node: Bank\n  updatedFields: [String!]\n  previousValues: BankPreviousValues\n}\n\ninput BankSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: BankWhereInput\n  AND: [BankSubscriptionWhereInput!]\n  OR: [BankSubscriptionWhereInput!]\n  NOT: [BankSubscriptionWhereInput!]\n}\n\ninput BankUpdateInput {\n  accounts: AccountUpdateManyWithoutBankInput\n  name: String\n}\n\ninput BankUpdateManyMutationInput {\n  name: String\n}\n\ninput BankUpdateOneRequiredWithoutAccountsInput {\n  create: BankCreateWithoutAccountsInput\n  update: BankUpdateWithoutAccountsDataInput\n  upsert: BankUpsertWithoutAccountsInput\n  connect: BankWhereUniqueInput\n}\n\ninput BankUpdateWithoutAccountsDataInput {\n  name: String\n}\n\ninput BankUpsertWithoutAccountsInput {\n  update: BankUpdateWithoutAccountsDataInput!\n  create: BankCreateWithoutAccountsInput!\n}\n\ninput BankWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  accounts_every: AccountWhereInput\n  accounts_some: AccountWhereInput\n  accounts_none: AccountWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [BankWhereInput!]\n  OR: [BankWhereInput!]\n  NOT: [BankWhereInput!]\n}\n\ninput BankWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Budget {\n  id: ID!\n  amount: Float!\n  startDate: DateTime!\n  endDate: DateTime!\n  category: Category!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype BudgetConnection {\n  pageInfo: PageInfo!\n  edges: [BudgetEdge]!\n  aggregate: AggregateBudget!\n}\n\ninput BudgetCreateInput {\n  id: ID\n  amount: Float!\n  startDate: DateTime!\n  endDate: DateTime!\n  category: CategoryCreateOneWithoutBudgetsInput!\n}\n\ninput BudgetCreateManyWithoutCategoryInput {\n  create: [BudgetCreateWithoutCategoryInput!]\n  connect: [BudgetWhereUniqueInput!]\n}\n\ninput BudgetCreateWithoutCategoryInput {\n  id: ID\n  amount: Float!\n  startDate: DateTime!\n  endDate: DateTime!\n}\n\ntype BudgetEdge {\n  node: Budget!\n  cursor: String!\n}\n\nenum BudgetOrderByInput {\n  id_ASC\n  id_DESC\n  amount_ASC\n  amount_DESC\n  startDate_ASC\n  startDate_DESC\n  endDate_ASC\n  endDate_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BudgetPreviousValues {\n  id: ID!\n  amount: Float!\n  startDate: DateTime!\n  endDate: DateTime!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ninput BudgetScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  amount: Float\n  amount_not: Float\n  amount_in: [Float!]\n  amount_not_in: [Float!]\n  amount_lt: Float\n  amount_lte: Float\n  amount_gt: Float\n  amount_gte: Float\n  startDate: DateTime\n  startDate_not: DateTime\n  startDate_in: [DateTime!]\n  startDate_not_in: [DateTime!]\n  startDate_lt: DateTime\n  startDate_lte: DateTime\n  startDate_gt: DateTime\n  startDate_gte: DateTime\n  endDate: DateTime\n  endDate_not: DateTime\n  endDate_in: [DateTime!]\n  endDate_not_in: [DateTime!]\n  endDate_lt: DateTime\n  endDate_lte: DateTime\n  endDate_gt: DateTime\n  endDate_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [BudgetScalarWhereInput!]\n  OR: [BudgetScalarWhereInput!]\n  NOT: [BudgetScalarWhereInput!]\n}\n\ntype BudgetSubscriptionPayload {\n  mutation: MutationType!\n  node: Budget\n  updatedFields: [String!]\n  previousValues: BudgetPreviousValues\n}\n\ninput BudgetSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: BudgetWhereInput\n  AND: [BudgetSubscriptionWhereInput!]\n  OR: [BudgetSubscriptionWhereInput!]\n  NOT: [BudgetSubscriptionWhereInput!]\n}\n\ninput BudgetUpdateInput {\n  amount: Float\n  startDate: DateTime\n  endDate: DateTime\n  category: CategoryUpdateOneRequiredWithoutBudgetsInput\n}\n\ninput BudgetUpdateManyDataInput {\n  amount: Float\n  startDate: DateTime\n  endDate: DateTime\n}\n\ninput BudgetUpdateManyMutationInput {\n  amount: Float\n  startDate: DateTime\n  endDate: DateTime\n}\n\ninput BudgetUpdateManyWithoutCategoryInput {\n  create: [BudgetCreateWithoutCategoryInput!]\n  delete: [BudgetWhereUniqueInput!]\n  connect: [BudgetWhereUniqueInput!]\n  set: [BudgetWhereUniqueInput!]\n  disconnect: [BudgetWhereUniqueInput!]\n  update: [BudgetUpdateWithWhereUniqueWithoutCategoryInput!]\n  upsert: [BudgetUpsertWithWhereUniqueWithoutCategoryInput!]\n  deleteMany: [BudgetScalarWhereInput!]\n  updateMany: [BudgetUpdateManyWithWhereNestedInput!]\n}\n\ninput BudgetUpdateManyWithWhereNestedInput {\n  where: BudgetScalarWhereInput!\n  data: BudgetUpdateManyDataInput!\n}\n\ninput BudgetUpdateWithoutCategoryDataInput {\n  amount: Float\n  startDate: DateTime\n  endDate: DateTime\n}\n\ninput BudgetUpdateWithWhereUniqueWithoutCategoryInput {\n  where: BudgetWhereUniqueInput!\n  data: BudgetUpdateWithoutCategoryDataInput!\n}\n\ninput BudgetUpsertWithWhereUniqueWithoutCategoryInput {\n  where: BudgetWhereUniqueInput!\n  update: BudgetUpdateWithoutCategoryDataInput!\n  create: BudgetCreateWithoutCategoryInput!\n}\n\ninput BudgetWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  amount: Float\n  amount_not: Float\n  amount_in: [Float!]\n  amount_not_in: [Float!]\n  amount_lt: Float\n  amount_lte: Float\n  amount_gt: Float\n  amount_gte: Float\n  startDate: DateTime\n  startDate_not: DateTime\n  startDate_in: [DateTime!]\n  startDate_not_in: [DateTime!]\n  startDate_lt: DateTime\n  startDate_lte: DateTime\n  startDate_gt: DateTime\n  startDate_gte: DateTime\n  endDate: DateTime\n  endDate_not: DateTime\n  endDate_in: [DateTime!]\n  endDate_not_in: [DateTime!]\n  endDate_lt: DateTime\n  endDate_lte: DateTime\n  endDate_gt: DateTime\n  endDate_gte: DateTime\n  category: CategoryWhereInput\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [BudgetWhereInput!]\n  OR: [BudgetWhereInput!]\n  NOT: [BudgetWhereInput!]\n}\n\ninput BudgetWhereUniqueInput {\n  id: ID\n}\n\ntype Category {\n  id: ID!\n  user: User!\n  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction!]\n  icon: Icon!\n  color: String!\n  name: String!\n  priority: Int\n  budgets(where: BudgetWhereInput, orderBy: BudgetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Budget!]\n}\n\ntype CategoryConnection {\n  pageInfo: PageInfo!\n  edges: [CategoryEdge]!\n  aggregate: AggregateCategory!\n}\n\ninput CategoryCreateInput {\n  id: ID\n  user: UserCreateOneWithoutCategoriesInput!\n  transactions: TransactionCreateManyWithoutCategoryInput\n  icon: IconCreateOneWithoutCategoriesInput!\n  color: String!\n  name: String!\n  priority: Int\n  budgets: BudgetCreateManyWithoutCategoryInput\n}\n\ninput CategoryCreateManyWithoutIconInput {\n  create: [CategoryCreateWithoutIconInput!]\n  connect: [CategoryWhereUniqueInput!]\n}\n\ninput CategoryCreateManyWithoutUserInput {\n  create: [CategoryCreateWithoutUserInput!]\n  connect: [CategoryWhereUniqueInput!]\n}\n\ninput CategoryCreateOneWithoutBudgetsInput {\n  create: CategoryCreateWithoutBudgetsInput\n  connect: CategoryWhereUniqueInput\n}\n\ninput CategoryCreateOneWithoutTransactionsInput {\n  create: CategoryCreateWithoutTransactionsInput\n  connect: CategoryWhereUniqueInput\n}\n\ninput CategoryCreateWithoutBudgetsInput {\n  id: ID\n  user: UserCreateOneWithoutCategoriesInput!\n  transactions: TransactionCreateManyWithoutCategoryInput\n  icon: IconCreateOneWithoutCategoriesInput!\n  color: String!\n  name: String!\n  priority: Int\n}\n\ninput CategoryCreateWithoutIconInput {\n  id: ID\n  user: UserCreateOneWithoutCategoriesInput!\n  transactions: TransactionCreateManyWithoutCategoryInput\n  color: String!\n  name: String!\n  priority: Int\n  budgets: BudgetCreateManyWithoutCategoryInput\n}\n\ninput CategoryCreateWithoutTransactionsInput {\n  id: ID\n  user: UserCreateOneWithoutCategoriesInput!\n  icon: IconCreateOneWithoutCategoriesInput!\n  color: String!\n  name: String!\n  priority: Int\n  budgets: BudgetCreateManyWithoutCategoryInput\n}\n\ninput CategoryCreateWithoutUserInput {\n  id: ID\n  transactions: TransactionCreateManyWithoutCategoryInput\n  icon: IconCreateOneWithoutCategoriesInput!\n  color: String!\n  name: String!\n  priority: Int\n  budgets: BudgetCreateManyWithoutCategoryInput\n}\n\ntype CategoryEdge {\n  node: Category!\n  cursor: String!\n}\n\nenum CategoryOrderByInput {\n  id_ASC\n  id_DESC\n  color_ASC\n  color_DESC\n  name_ASC\n  name_DESC\n  priority_ASC\n  priority_DESC\n}\n\ntype CategoryPreviousValues {\n  id: ID!\n  color: String!\n  name: String!\n  priority: Int\n}\n\ninput CategoryScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  color: String\n  color_not: String\n  color_in: [String!]\n  color_not_in: [String!]\n  color_lt: String\n  color_lte: String\n  color_gt: String\n  color_gte: String\n  color_contains: String\n  color_not_contains: String\n  color_starts_with: String\n  color_not_starts_with: String\n  color_ends_with: String\n  color_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  priority: Int\n  priority_not: Int\n  priority_in: [Int!]\n  priority_not_in: [Int!]\n  priority_lt: Int\n  priority_lte: Int\n  priority_gt: Int\n  priority_gte: Int\n  AND: [CategoryScalarWhereInput!]\n  OR: [CategoryScalarWhereInput!]\n  NOT: [CategoryScalarWhereInput!]\n}\n\ntype CategorySubscriptionPayload {\n  mutation: MutationType!\n  node: Category\n  updatedFields: [String!]\n  previousValues: CategoryPreviousValues\n}\n\ninput CategorySubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CategoryWhereInput\n  AND: [CategorySubscriptionWhereInput!]\n  OR: [CategorySubscriptionWhereInput!]\n  NOT: [CategorySubscriptionWhereInput!]\n}\n\ninput CategoryUpdateInput {\n  user: UserUpdateOneRequiredWithoutCategoriesInput\n  transactions: TransactionUpdateManyWithoutCategoryInput\n  icon: IconUpdateOneRequiredWithoutCategoriesInput\n  color: String\n  name: String\n  priority: Int\n  budgets: BudgetUpdateManyWithoutCategoryInput\n}\n\ninput CategoryUpdateManyDataInput {\n  color: String\n  name: String\n  priority: Int\n}\n\ninput CategoryUpdateManyMutationInput {\n  color: String\n  name: String\n  priority: Int\n}\n\ninput CategoryUpdateManyWithoutIconInput {\n  create: [CategoryCreateWithoutIconInput!]\n  delete: [CategoryWhereUniqueInput!]\n  connect: [CategoryWhereUniqueInput!]\n  set: [CategoryWhereUniqueInput!]\n  disconnect: [CategoryWhereUniqueInput!]\n  update: [CategoryUpdateWithWhereUniqueWithoutIconInput!]\n  upsert: [CategoryUpsertWithWhereUniqueWithoutIconInput!]\n  deleteMany: [CategoryScalarWhereInput!]\n  updateMany: [CategoryUpdateManyWithWhereNestedInput!]\n}\n\ninput CategoryUpdateManyWithoutUserInput {\n  create: [CategoryCreateWithoutUserInput!]\n  delete: [CategoryWhereUniqueInput!]\n  connect: [CategoryWhereUniqueInput!]\n  set: [CategoryWhereUniqueInput!]\n  disconnect: [CategoryWhereUniqueInput!]\n  update: [CategoryUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [CategoryUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [CategoryScalarWhereInput!]\n  updateMany: [CategoryUpdateManyWithWhereNestedInput!]\n}\n\ninput CategoryUpdateManyWithWhereNestedInput {\n  where: CategoryScalarWhereInput!\n  data: CategoryUpdateManyDataInput!\n}\n\ninput CategoryUpdateOneRequiredWithoutBudgetsInput {\n  create: CategoryCreateWithoutBudgetsInput\n  update: CategoryUpdateWithoutBudgetsDataInput\n  upsert: CategoryUpsertWithoutBudgetsInput\n  connect: CategoryWhereUniqueInput\n}\n\ninput CategoryUpdateOneRequiredWithoutTransactionsInput {\n  create: CategoryCreateWithoutTransactionsInput\n  update: CategoryUpdateWithoutTransactionsDataInput\n  upsert: CategoryUpsertWithoutTransactionsInput\n  connect: CategoryWhereUniqueInput\n}\n\ninput CategoryUpdateWithoutBudgetsDataInput {\n  user: UserUpdateOneRequiredWithoutCategoriesInput\n  transactions: TransactionUpdateManyWithoutCategoryInput\n  icon: IconUpdateOneRequiredWithoutCategoriesInput\n  color: String\n  name: String\n  priority: Int\n}\n\ninput CategoryUpdateWithoutIconDataInput {\n  user: UserUpdateOneRequiredWithoutCategoriesInput\n  transactions: TransactionUpdateManyWithoutCategoryInput\n  color: String\n  name: String\n  priority: Int\n  budgets: BudgetUpdateManyWithoutCategoryInput\n}\n\ninput CategoryUpdateWithoutTransactionsDataInput {\n  user: UserUpdateOneRequiredWithoutCategoriesInput\n  icon: IconUpdateOneRequiredWithoutCategoriesInput\n  color: String\n  name: String\n  priority: Int\n  budgets: BudgetUpdateManyWithoutCategoryInput\n}\n\ninput CategoryUpdateWithoutUserDataInput {\n  transactions: TransactionUpdateManyWithoutCategoryInput\n  icon: IconUpdateOneRequiredWithoutCategoriesInput\n  color: String\n  name: String\n  priority: Int\n  budgets: BudgetUpdateManyWithoutCategoryInput\n}\n\ninput CategoryUpdateWithWhereUniqueWithoutIconInput {\n  where: CategoryWhereUniqueInput!\n  data: CategoryUpdateWithoutIconDataInput!\n}\n\ninput CategoryUpdateWithWhereUniqueWithoutUserInput {\n  where: CategoryWhereUniqueInput!\n  data: CategoryUpdateWithoutUserDataInput!\n}\n\ninput CategoryUpsertWithoutBudgetsInput {\n  update: CategoryUpdateWithoutBudgetsDataInput!\n  create: CategoryCreateWithoutBudgetsInput!\n}\n\ninput CategoryUpsertWithoutTransactionsInput {\n  update: CategoryUpdateWithoutTransactionsDataInput!\n  create: CategoryCreateWithoutTransactionsInput!\n}\n\ninput CategoryUpsertWithWhereUniqueWithoutIconInput {\n  where: CategoryWhereUniqueInput!\n  update: CategoryUpdateWithoutIconDataInput!\n  create: CategoryCreateWithoutIconInput!\n}\n\ninput CategoryUpsertWithWhereUniqueWithoutUserInput {\n  where: CategoryWhereUniqueInput!\n  update: CategoryUpdateWithoutUserDataInput!\n  create: CategoryCreateWithoutUserInput!\n}\n\ninput CategoryWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  user: UserWhereInput\n  transactions_every: TransactionWhereInput\n  transactions_some: TransactionWhereInput\n  transactions_none: TransactionWhereInput\n  icon: IconWhereInput\n  color: String\n  color_not: String\n  color_in: [String!]\n  color_not_in: [String!]\n  color_lt: String\n  color_lte: String\n  color_gt: String\n  color_gte: String\n  color_contains: String\n  color_not_contains: String\n  color_starts_with: String\n  color_not_starts_with: String\n  color_ends_with: String\n  color_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  priority: Int\n  priority_not: Int\n  priority_in: [Int!]\n  priority_not_in: [Int!]\n  priority_lt: Int\n  priority_lte: Int\n  priority_gt: Int\n  priority_gte: Int\n  budgets_every: BudgetWhereInput\n  budgets_some: BudgetWhereInput\n  budgets_none: BudgetWhereInput\n  AND: [CategoryWhereInput!]\n  OR: [CategoryWhereInput!]\n  NOT: [CategoryWhereInput!]\n}\n\ninput CategoryWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\ntype Icon {\n  id: ID!\n  name: String!\n  photo: String!\n  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]\n}\n\ntype IconConnection {\n  pageInfo: PageInfo!\n  edges: [IconEdge]!\n  aggregate: AggregateIcon!\n}\n\ninput IconCreateInput {\n  id: ID\n  name: String!\n  photo: String!\n  categories: CategoryCreateManyWithoutIconInput\n}\n\ninput IconCreateOneWithoutCategoriesInput {\n  create: IconCreateWithoutCategoriesInput\n  connect: IconWhereUniqueInput\n}\n\ninput IconCreateWithoutCategoriesInput {\n  id: ID\n  name: String!\n  photo: String!\n}\n\ntype IconEdge {\n  node: Icon!\n  cursor: String!\n}\n\nenum IconOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  photo_ASC\n  photo_DESC\n}\n\ntype IconPreviousValues {\n  id: ID!\n  name: String!\n  photo: String!\n}\n\ntype IconSubscriptionPayload {\n  mutation: MutationType!\n  node: Icon\n  updatedFields: [String!]\n  previousValues: IconPreviousValues\n}\n\ninput IconSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: IconWhereInput\n  AND: [IconSubscriptionWhereInput!]\n  OR: [IconSubscriptionWhereInput!]\n  NOT: [IconSubscriptionWhereInput!]\n}\n\ninput IconUpdateInput {\n  name: String\n  photo: String\n  categories: CategoryUpdateManyWithoutIconInput\n}\n\ninput IconUpdateManyMutationInput {\n  name: String\n  photo: String\n}\n\ninput IconUpdateOneRequiredWithoutCategoriesInput {\n  create: IconCreateWithoutCategoriesInput\n  update: IconUpdateWithoutCategoriesDataInput\n  upsert: IconUpsertWithoutCategoriesInput\n  connect: IconWhereUniqueInput\n}\n\ninput IconUpdateWithoutCategoriesDataInput {\n  name: String\n  photo: String\n}\n\ninput IconUpsertWithoutCategoriesInput {\n  update: IconUpdateWithoutCategoriesDataInput!\n  create: IconCreateWithoutCategoriesInput!\n}\n\ninput IconWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  photo: String\n  photo_not: String\n  photo_in: [String!]\n  photo_not_in: [String!]\n  photo_lt: String\n  photo_lte: String\n  photo_gt: String\n  photo_gte: String\n  photo_contains: String\n  photo_not_contains: String\n  photo_starts_with: String\n  photo_not_starts_with: String\n  photo_ends_with: String\n  photo_not_ends_with: String\n  categories_every: CategoryWhereInput\n  categories_some: CategoryWhereInput\n  categories_none: CategoryWhereInput\n  AND: [IconWhereInput!]\n  OR: [IconWhereInput!]\n  NOT: [IconWhereInput!]\n}\n\ninput IconWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createAccount(data: AccountCreateInput!): Account!\n  updateAccount(data: AccountUpdateInput!, where: AccountWhereUniqueInput!): Account\n  updateManyAccounts(data: AccountUpdateManyMutationInput!, where: AccountWhereInput): BatchPayload!\n  upsertAccount(where: AccountWhereUniqueInput!, create: AccountCreateInput!, update: AccountUpdateInput!): Account!\n  deleteAccount(where: AccountWhereUniqueInput!): Account\n  deleteManyAccounts(where: AccountWhereInput): BatchPayload!\n  createBank(data: BankCreateInput!): Bank!\n  updateBank(data: BankUpdateInput!, where: BankWhereUniqueInput!): Bank\n  updateManyBanks(data: BankUpdateManyMutationInput!, where: BankWhereInput): BatchPayload!\n  upsertBank(where: BankWhereUniqueInput!, create: BankCreateInput!, update: BankUpdateInput!): Bank!\n  deleteBank(where: BankWhereUniqueInput!): Bank\n  deleteManyBanks(where: BankWhereInput): BatchPayload!\n  createBudget(data: BudgetCreateInput!): Budget!\n  updateBudget(data: BudgetUpdateInput!, where: BudgetWhereUniqueInput!): Budget\n  updateManyBudgets(data: BudgetUpdateManyMutationInput!, where: BudgetWhereInput): BatchPayload!\n  upsertBudget(where: BudgetWhereUniqueInput!, create: BudgetCreateInput!, update: BudgetUpdateInput!): Budget!\n  deleteBudget(where: BudgetWhereUniqueInput!): Budget\n  deleteManyBudgets(where: BudgetWhereInput): BatchPayload!\n  createCategory(data: CategoryCreateInput!): Category!\n  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category\n  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!\n  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!\n  deleteCategory(where: CategoryWhereUniqueInput!): Category\n  deleteManyCategories(where: CategoryWhereInput): BatchPayload!\n  createIcon(data: IconCreateInput!): Icon!\n  updateIcon(data: IconUpdateInput!, where: IconWhereUniqueInput!): Icon\n  updateManyIcons(data: IconUpdateManyMutationInput!, where: IconWhereInput): BatchPayload!\n  upsertIcon(where: IconWhereUniqueInput!, create: IconCreateInput!, update: IconUpdateInput!): Icon!\n  deleteIcon(where: IconWhereUniqueInput!): Icon\n  deleteManyIcons(where: IconWhereInput): BatchPayload!\n  createTransaction(data: TransactionCreateInput!): Transaction!\n  updateTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction\n  updateManyTransactions(data: TransactionUpdateManyMutationInput!, where: TransactionWhereInput): BatchPayload!\n  upsertTransaction(where: TransactionWhereUniqueInput!, create: TransactionCreateInput!, update: TransactionUpdateInput!): Transaction!\n  deleteTransaction(where: TransactionWhereUniqueInput!): Transaction\n  deleteManyTransactions(where: TransactionWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  account(where: AccountWhereUniqueInput!): Account\n  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account]!\n  accountsConnection(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AccountConnection!\n  bank(where: BankWhereUniqueInput!): Bank\n  banks(where: BankWhereInput, orderBy: BankOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bank]!\n  banksConnection(where: BankWhereInput, orderBy: BankOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BankConnection!\n  budget(where: BudgetWhereUniqueInput!): Budget\n  budgets(where: BudgetWhereInput, orderBy: BudgetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Budget]!\n  budgetsConnection(where: BudgetWhereInput, orderBy: BudgetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BudgetConnection!\n  category(where: CategoryWhereUniqueInput!): Category\n  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!\n  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!\n  icon(where: IconWhereUniqueInput!): Icon\n  icons(where: IconWhereInput, orderBy: IconOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Icon]!\n  iconsConnection(where: IconWhereInput, orderBy: IconOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IconConnection!\n  transaction(where: TransactionWhereUniqueInput!): Transaction\n  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction]!\n  transactionsConnection(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  account(where: AccountSubscriptionWhereInput): AccountSubscriptionPayload\n  bank(where: BankSubscriptionWhereInput): BankSubscriptionPayload\n  budget(where: BudgetSubscriptionWhereInput): BudgetSubscriptionPayload\n  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload\n  icon(where: IconSubscriptionWhereInput): IconSubscriptionPayload\n  transaction(where: TransactionSubscriptionWhereInput): TransactionSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Transaction {\n  id: ID!\n  account: Account!\n  category: Category!\n  amount: Float!\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype TransactionConnection {\n  pageInfo: PageInfo!\n  edges: [TransactionEdge]!\n  aggregate: AggregateTransaction!\n}\n\ninput TransactionCreateInput {\n  id: ID\n  account: AccountCreateOneWithoutTransactionsInput!\n  category: CategoryCreateOneWithoutTransactionsInput!\n  amount: Float!\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionCreateManyWithoutAccountInput {\n  create: [TransactionCreateWithoutAccountInput!]\n  connect: [TransactionWhereUniqueInput!]\n}\n\ninput TransactionCreateManyWithoutCategoryInput {\n  create: [TransactionCreateWithoutCategoryInput!]\n  connect: [TransactionWhereUniqueInput!]\n}\n\ninput TransactionCreateWithoutAccountInput {\n  id: ID\n  category: CategoryCreateOneWithoutTransactionsInput!\n  amount: Float!\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionCreateWithoutCategoryInput {\n  id: ID\n  account: AccountCreateOneWithoutTransactionsInput!\n  amount: Float!\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ntype TransactionEdge {\n  node: Transaction!\n  cursor: String!\n}\n\nenum TransactionOrderByInput {\n  id_ASC\n  id_DESC\n  amount_ASC\n  amount_DESC\n  info_ASC\n  info_DESC\n  approved_ASC\n  approved_DESC\n  accountingDate_ASC\n  accountingDate_DESC\n  isReservation_ASC\n  isReservation_DESC\n  type_ASC\n  type_DESC\n  typeCode_ASC\n  typeCode_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TransactionPreviousValues {\n  id: ID!\n  amount: Float!\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ninput TransactionScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  amount: Float\n  amount_not: Float\n  amount_in: [Float!]\n  amount_not_in: [Float!]\n  amount_lt: Float\n  amount_lte: Float\n  amount_gt: Float\n  amount_gte: Float\n  info: String\n  info_not: String\n  info_in: [String!]\n  info_not_in: [String!]\n  info_lt: String\n  info_lte: String\n  info_gt: String\n  info_gte: String\n  info_contains: String\n  info_not_contains: String\n  info_starts_with: String\n  info_not_starts_with: String\n  info_ends_with: String\n  info_not_ends_with: String\n  approved: DateTime\n  approved_not: DateTime\n  approved_in: [DateTime!]\n  approved_not_in: [DateTime!]\n  approved_lt: DateTime\n  approved_lte: DateTime\n  approved_gt: DateTime\n  approved_gte: DateTime\n  accountingDate: DateTime\n  accountingDate_not: DateTime\n  accountingDate_in: [DateTime!]\n  accountingDate_not_in: [DateTime!]\n  accountingDate_lt: DateTime\n  accountingDate_lte: DateTime\n  accountingDate_gt: DateTime\n  accountingDate_gte: DateTime\n  isReservation: Boolean\n  isReservation_not: Boolean\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n  typeCode: Int\n  typeCode_not: Int\n  typeCode_in: [Int!]\n  typeCode_not_in: [Int!]\n  typeCode_lt: Int\n  typeCode_lte: Int\n  typeCode_gt: Int\n  typeCode_gte: Int\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [TransactionScalarWhereInput!]\n  OR: [TransactionScalarWhereInput!]\n  NOT: [TransactionScalarWhereInput!]\n}\n\ntype TransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: Transaction\n  updatedFields: [String!]\n  previousValues: TransactionPreviousValues\n}\n\ninput TransactionSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TransactionWhereInput\n  AND: [TransactionSubscriptionWhereInput!]\n  OR: [TransactionSubscriptionWhereInput!]\n  NOT: [TransactionSubscriptionWhereInput!]\n}\n\ninput TransactionUpdateInput {\n  account: AccountUpdateOneRequiredWithoutTransactionsInput\n  category: CategoryUpdateOneRequiredWithoutTransactionsInput\n  amount: Float\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionUpdateManyDataInput {\n  amount: Float\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionUpdateManyMutationInput {\n  amount: Float\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionUpdateManyWithoutAccountInput {\n  create: [TransactionCreateWithoutAccountInput!]\n  delete: [TransactionWhereUniqueInput!]\n  connect: [TransactionWhereUniqueInput!]\n  set: [TransactionWhereUniqueInput!]\n  disconnect: [TransactionWhereUniqueInput!]\n  update: [TransactionUpdateWithWhereUniqueWithoutAccountInput!]\n  upsert: [TransactionUpsertWithWhereUniqueWithoutAccountInput!]\n  deleteMany: [TransactionScalarWhereInput!]\n  updateMany: [TransactionUpdateManyWithWhereNestedInput!]\n}\n\ninput TransactionUpdateManyWithoutCategoryInput {\n  create: [TransactionCreateWithoutCategoryInput!]\n  delete: [TransactionWhereUniqueInput!]\n  connect: [TransactionWhereUniqueInput!]\n  set: [TransactionWhereUniqueInput!]\n  disconnect: [TransactionWhereUniqueInput!]\n  update: [TransactionUpdateWithWhereUniqueWithoutCategoryInput!]\n  upsert: [TransactionUpsertWithWhereUniqueWithoutCategoryInput!]\n  deleteMany: [TransactionScalarWhereInput!]\n  updateMany: [TransactionUpdateManyWithWhereNestedInput!]\n}\n\ninput TransactionUpdateManyWithWhereNestedInput {\n  where: TransactionScalarWhereInput!\n  data: TransactionUpdateManyDataInput!\n}\n\ninput TransactionUpdateWithoutAccountDataInput {\n  category: CategoryUpdateOneRequiredWithoutTransactionsInput\n  amount: Float\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionUpdateWithoutCategoryDataInput {\n  account: AccountUpdateOneRequiredWithoutTransactionsInput\n  amount: Float\n  info: String\n  approved: DateTime\n  accountingDate: DateTime\n  isReservation: Boolean\n  type: String\n  typeCode: Int\n}\n\ninput TransactionUpdateWithWhereUniqueWithoutAccountInput {\n  where: TransactionWhereUniqueInput!\n  data: TransactionUpdateWithoutAccountDataInput!\n}\n\ninput TransactionUpdateWithWhereUniqueWithoutCategoryInput {\n  where: TransactionWhereUniqueInput!\n  data: TransactionUpdateWithoutCategoryDataInput!\n}\n\ninput TransactionUpsertWithWhereUniqueWithoutAccountInput {\n  where: TransactionWhereUniqueInput!\n  update: TransactionUpdateWithoutAccountDataInput!\n  create: TransactionCreateWithoutAccountInput!\n}\n\ninput TransactionUpsertWithWhereUniqueWithoutCategoryInput {\n  where: TransactionWhereUniqueInput!\n  update: TransactionUpdateWithoutCategoryDataInput!\n  create: TransactionCreateWithoutCategoryInput!\n}\n\ninput TransactionWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  account: AccountWhereInput\n  category: CategoryWhereInput\n  amount: Float\n  amount_not: Float\n  amount_in: [Float!]\n  amount_not_in: [Float!]\n  amount_lt: Float\n  amount_lte: Float\n  amount_gt: Float\n  amount_gte: Float\n  info: String\n  info_not: String\n  info_in: [String!]\n  info_not_in: [String!]\n  info_lt: String\n  info_lte: String\n  info_gt: String\n  info_gte: String\n  info_contains: String\n  info_not_contains: String\n  info_starts_with: String\n  info_not_starts_with: String\n  info_ends_with: String\n  info_not_ends_with: String\n  approved: DateTime\n  approved_not: DateTime\n  approved_in: [DateTime!]\n  approved_not_in: [DateTime!]\n  approved_lt: DateTime\n  approved_lte: DateTime\n  approved_gt: DateTime\n  approved_gte: DateTime\n  accountingDate: DateTime\n  accountingDate_not: DateTime\n  accountingDate_in: [DateTime!]\n  accountingDate_not_in: [DateTime!]\n  accountingDate_lt: DateTime\n  accountingDate_lte: DateTime\n  accountingDate_gt: DateTime\n  accountingDate_gte: DateTime\n  isReservation: Boolean\n  isReservation_not: Boolean\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n  typeCode: Int\n  typeCode_not: Int\n  typeCode_in: [Int!]\n  typeCode_not_in: [Int!]\n  typeCode_lt: Int\n  typeCode_lte: Int\n  typeCode_gt: Int\n  typeCode_gte: Int\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [TransactionWhereInput!]\n  OR: [TransactionWhereInput!]\n  NOT: [TransactionWhereInput!]\n}\n\ninput TransactionWhereUniqueInput {\n  id: ID\n}\n\ntype User {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  resetToken: String\n  tokenValidUntil: DateTime\n  updatedAt: DateTime!\n  createdAt: DateTime!\n  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account!]\n  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  resetToken: String\n  tokenValidUntil: DateTime\n  accounts: AccountCreateManyWithoutOwnerInput\n  categories: CategoryCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutAccountsInput {\n  create: UserCreateWithoutAccountsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutCategoriesInput {\n  create: UserCreateWithoutCategoriesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutAccountsInput {\n  id: ID\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  resetToken: String\n  tokenValidUntil: DateTime\n  categories: CategoryCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutCategoriesInput {\n  id: ID\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  resetToken: String\n  tokenValidUntil: DateTime\n  accounts: AccountCreateManyWithoutOwnerInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  resetToken_ASC\n  resetToken_DESC\n  tokenValidUntil_ASC\n  tokenValidUntil_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  resetToken: String\n  tokenValidUntil: DateTime\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  resetToken: String\n  tokenValidUntil: DateTime\n  accounts: AccountUpdateManyWithoutOwnerInput\n  categories: CategoryUpdateManyWithoutUserInput\n}\n\ninput UserUpdateManyMutationInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  resetToken: String\n  tokenValidUntil: DateTime\n}\n\ninput UserUpdateOneRequiredWithoutAccountsInput {\n  create: UserCreateWithoutAccountsInput\n  update: UserUpdateWithoutAccountsDataInput\n  upsert: UserUpsertWithoutAccountsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutCategoriesInput {\n  create: UserCreateWithoutCategoriesInput\n  update: UserUpdateWithoutCategoriesDataInput\n  upsert: UserUpsertWithoutCategoriesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutAccountsDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  resetToken: String\n  tokenValidUntil: DateTime\n  categories: CategoryUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutCategoriesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  resetToken: String\n  tokenValidUntil: DateTime\n  accounts: AccountUpdateManyWithoutOwnerInput\n}\n\ninput UserUpsertWithoutAccountsInput {\n  update: UserUpdateWithoutAccountsDataInput!\n  create: UserCreateWithoutAccountsInput!\n}\n\ninput UserUpsertWithoutCategoriesInput {\n  update: UserUpdateWithoutCategoriesDataInput!\n  create: UserCreateWithoutCategoriesInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  firstName: String\n  firstName_not: String\n  firstName_in: [String!]\n  firstName_not_in: [String!]\n  firstName_lt: String\n  firstName_lte: String\n  firstName_gt: String\n  firstName_gte: String\n  firstName_contains: String\n  firstName_not_contains: String\n  firstName_starts_with: String\n  firstName_not_starts_with: String\n  firstName_ends_with: String\n  firstName_not_ends_with: String\n  lastName: String\n  lastName_not: String\n  lastName_in: [String!]\n  lastName_not_in: [String!]\n  lastName_lt: String\n  lastName_lte: String\n  lastName_gt: String\n  lastName_gte: String\n  lastName_contains: String\n  lastName_not_contains: String\n  lastName_starts_with: String\n  lastName_not_starts_with: String\n  lastName_ends_with: String\n  lastName_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  resetToken: String\n  resetToken_not: String\n  resetToken_in: [String!]\n  resetToken_not_in: [String!]\n  resetToken_lt: String\n  resetToken_lte: String\n  resetToken_gt: String\n  resetToken_gte: String\n  resetToken_contains: String\n  resetToken_not_contains: String\n  resetToken_starts_with: String\n  resetToken_not_starts_with: String\n  resetToken_ends_with: String\n  resetToken_not_ends_with: String\n  tokenValidUntil: DateTime\n  tokenValidUntil_not: DateTime\n  tokenValidUntil_in: [DateTime!]\n  tokenValidUntil_not_in: [DateTime!]\n  tokenValidUntil_lt: DateTime\n  tokenValidUntil_lte: DateTime\n  tokenValidUntil_gt: DateTime\n  tokenValidUntil_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  accounts_every: AccountWhereInput\n  accounts_some: AccountWhereInput\n  accounts_none: AccountWhereInput\n  categories_every: CategoryWhereInput\n  categories_some: CategoryWhereInput\n  categories_none: CategoryWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n";
//# sourceMappingURL=prisma-schema.js.map